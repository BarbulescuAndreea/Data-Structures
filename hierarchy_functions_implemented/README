In this project i've implemented some of the basic commands you can give using command line.    
    touch- If the file list is empty, the file is inserted first
          and connections are made with parents. If the file has the same name as an existing file/directory
          existing, it is no longer inserted. I made this check by going through the list of directories one by one
          and files with an auxiliary "currentFile" or "currentDir". At the end, if everything was satisfied
          insertion conditions, I insert it in the list of files using an aux auxiliary.
    mkdir - exactly the same procedure as with touch, only now applied to a directory, and the insertion is done
          in the directory list now.
    ls - I first went through the list of directories and displayed all the directories in their order until
          the Directory list is empty (becomes NULL), then I did the same for the file list (File list).
    rm - If the file to be deleted does not exist, then the function returns "Could not find the file". then
          I did 3 checks: if the one to be deleted is the first one, I used an auxiliary file aux
          which takes the value of the file to be deleted, then the beginning of "head_children_files" becomes the next, and
          memory is freed for aux. If the one to be deleted is the second one, I used a prev file
          which represents the file before the one to be deleted, and I set its next to next->next. in the end,
          if neither the first nor the second should be deleted, I went through the list of files with a current and when I have it
          found the one that needs to be deleted, I did the same procedure for prev(prev->next = prev->next->next), where
          prev is the antecedent of the current.
    rmdir - the same procedure as for "rm" except that now I also checked if the contents of the directory to be deleted
          it has other files/directories inside, and in this case I also deleted these from inside.
          
          d - if you want to change the directory in the previous directory (cd ..) I changed the current directory
          to the principal or parent. If you want to change from the current directory to one directly from inside
          it, then the directory is searched through the directory list of the current directory, and if it is not found,
          the message "No directories found!" is displayed, and if it is found (isFound = 1), it is retained in a
          "current" and the target now becomes "current".
    pwd - I used character strings to display the message, initially it was displayed from the end to the beginning
          so it was necessary to use a copy that I could model by swapping between words in order to
          the desired display results in the end.
    tree - I used a helper function "printTree" which, depending on the level, puts spaces on the display
           (printf(" "* level)) and then displays the directory/file to be displayed.
           the tree function is implemented recursively, for each current directory, it is displayed
           the current directory then its subdirectories and files.
    stop - memory release function for each file, directory and its subdirectories/subfiles
    main - I read the message from the keyboard with the help of a "str" ​​string, then I separated it in the command and if it was
           necessary, and in the name, then for each command I called the corresponding function.
